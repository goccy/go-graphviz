// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: nori/nori.proto

package nori

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TypeKind int32

const (
	TypeKind_UNKNOWN TypeKind = 0  // unknown type.
	TypeKind_STRUCT  TypeKind = 1  // structure type.
	TypeKind_INT     TypeKind = 2  // int type.
	TypeKind_UINT    TypeKind = 3  // unsigned int type.
	TypeKind_VOIDPTR TypeKind = 4  // void* type.
	TypeKind_CHARPTR TypeKind = 5  // char* type.
	TypeKind_STRING  TypeKind = 6  // std::string type.
	TypeKind_BOOL    TypeKind = 7  // bool type.
	TypeKind_UINT64  TypeKind = 8  // uint64 type.
	TypeKind_INT64   TypeKind = 9  // int64 type.
	TypeKind_ENUM    TypeKind = 10 // enum type.
	TypeKind_FUNCPTR TypeKind = 11 // function pointer type.
	TypeKind_DOUBLE  TypeKind = 12 // double type.
	TypeKind_INT32   TypeKind = 13
	TypeKind_UINT32  TypeKind = 14
	TypeKind_FLOAT   TypeKind = 15
	TypeKind_CHAR    TypeKind = 16
)

// Enum value maps for TypeKind.
var (
	TypeKind_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "STRUCT",
		2:  "INT",
		3:  "UINT",
		4:  "VOIDPTR",
		5:  "CHARPTR",
		6:  "STRING",
		7:  "BOOL",
		8:  "UINT64",
		9:  "INT64",
		10: "ENUM",
		11: "FUNCPTR",
		12: "DOUBLE",
		13: "INT32",
		14: "UINT32",
		15: "FLOAT",
		16: "CHAR",
	}
	TypeKind_value = map[string]int32{
		"UNKNOWN": 0,
		"STRUCT":  1,
		"INT":     2,
		"UINT":    3,
		"VOIDPTR": 4,
		"CHARPTR": 5,
		"STRING":  6,
		"BOOL":    7,
		"UINT64":  8,
		"INT64":   9,
		"ENUM":    10,
		"FUNCPTR": 11,
		"DOUBLE":  12,
		"INT32":   13,
		"UINT32":  14,
		"FLOAT":   15,
		"CHAR":    16,
	}
)

func (x TypeKind) Enum() *TypeKind {
	p := new(TypeKind)
	*p = x
	return p
}

func (x TypeKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeKind) Descriptor() protoreflect.EnumDescriptor {
	return file_nori_nori_proto_enumTypes[0].Descriptor()
}

func (TypeKind) Type() protoreflect.EnumType {
	return &file_nori_nori_proto_enumTypes[0]
}

func (x TypeKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeKind.Descriptor instead.
func (TypeKind) EnumDescriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{0}
}

type FileRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export []*Export `protobuf:"bytes,1,rep,name=export,proto3" json:"export,omitempty"`
}

func (x *FileRule) Reset() {
	*x = FileRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRule) ProtoMessage() {}

func (x *FileRule) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRule.ProtoReflect.Descriptor instead.
func (*FileRule) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{0}
}

func (x *FileRule) GetExport() []*Export {
	if x != nil {
		return x.Export
	}
	return nil
}

type Export struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header []string       `protobuf:"bytes,1,rep,name=header,proto3" json:"header,omitempty"`
	Func   []*FunctionDef `protobuf:"bytes,2,rep,name=func,proto3" json:"func,omitempty"`
	Method []*MethodDef   `protobuf:"bytes,3,rep,name=method,proto3" json:"method,omitempty"`
}

func (x *Export) Reset() {
	*x = Export{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Export) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Export) ProtoMessage() {}

func (x *Export) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Export.ProtoReflect.Descriptor instead.
func (*Export) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{1}
}

func (x *Export) GetHeader() []string {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Export) GetFunc() []*FunctionDef {
	if x != nil {
		return x.Func
	}
	return nil
}

func (x *Export) GetMethod() []*MethodDef {
	if x != nil {
		return x.Method
	}
	return nil
}

type FunctionDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Alias  string  `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Args   []*Type `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	Return *Type   `protobuf:"bytes,4,opt,name=return,proto3" json:"return,omitempty"`
}

func (x *FunctionDef) Reset() {
	*x = FunctionDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionDef) ProtoMessage() {}

func (x *FunctionDef) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionDef.ProtoReflect.Descriptor instead.
func (*FunctionDef) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{2}
}

func (x *FunctionDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FunctionDef) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *FunctionDef) GetArgs() []*Type {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *FunctionDef) GetReturn() *Type {
	if x != nil {
		return x.Return
	}
	return nil
}

type MethodDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recv   string  `protobuf:"bytes,1,opt,name=recv,proto3" json:"recv,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Alias  string  `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Args   []*Type `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	Return *Type   `protobuf:"bytes,5,opt,name=return,proto3" json:"return,omitempty"`
}

func (x *MethodDef) Reset() {
	*x = MethodDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodDef) ProtoMessage() {}

func (x *MethodDef) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodDef.ProtoReflect.Descriptor instead.
func (*MethodDef) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{3}
}

func (x *MethodDef) GetRecv() string {
	if x != nil {
		return x.Recv
	}
	return ""
}

func (x *MethodDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MethodDef) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *MethodDef) GetArgs() []*Type {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *MethodDef) GetReturn() *Type {
	if x != nil {
		return x.Return
	}
	return nil
}

type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind            TypeKind `protobuf:"varint,1,opt,name=kind,proto3,enum=nori.TypeKind" json:"kind,omitempty"`                                   // type kind.
	Ref             string   `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`                                                         // reference name for type.
	Pointer         uint64   `protobuf:"varint,3,opt,name=pointer,proto3" json:"pointer,omitempty"`                                                // pointer number.
	Const           bool     `protobuf:"varint,4,opt,name=const,proto3" json:"const,omitempty"`                                                    // const value.
	Addr            bool     `protobuf:"varint,5,opt,name=addr,proto3" json:"addr,omitempty"`                                                      // & operatored value.
	Array           bool     `protobuf:"varint,6,opt,name=array,proto3" json:"array,omitempty"`                                                    // array type value.
	ArrayNum        *uint64  `protobuf:"varint,7,opt,name=array_num,json=arrayNum,proto3,oneof" json:"array_num,omitempty"`                        // array size.
	ArrayNumArg     *uint64  `protobuf:"varint,8,opt,name=array_num_arg,json=arrayNumArg,proto3,oneof" json:"array_num_arg,omitempty"`             // the argument number to decide array num.
	StringLengthArg *uint64  `protobuf:"varint,9,opt,name=string_length_arg,json=stringLengthArg,proto3,oneof" json:"string_length_arg,omitempty"` // the argument number to decide string length.
	// It is used as an argument for funcptr.
	// To uniquely determine a function between Go and C, some of the arguments need to be flagged.
	// It is used to specify those arguments.
	// When using funcptr, you must specify funcbaseptr for one of the arguments.
	Funcbaseptr bool `protobuf:"varint,10,opt,name=funcbaseptr,proto3" json:"funcbaseptr,omitempty"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{4}
}

func (x *Type) GetKind() TypeKind {
	if x != nil {
		return x.Kind
	}
	return TypeKind_UNKNOWN
}

func (x *Type) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Type) GetPointer() uint64 {
	if x != nil {
		return x.Pointer
	}
	return 0
}

func (x *Type) GetConst() bool {
	if x != nil {
		return x.Const
	}
	return false
}

func (x *Type) GetAddr() bool {
	if x != nil {
		return x.Addr
	}
	return false
}

func (x *Type) GetArray() bool {
	if x != nil {
		return x.Array
	}
	return false
}

func (x *Type) GetArrayNum() uint64 {
	if x != nil && x.ArrayNum != nil {
		return *x.ArrayNum
	}
	return 0
}

func (x *Type) GetArrayNumArg() uint64 {
	if x != nil && x.ArrayNumArg != nil {
		return *x.ArrayNumArg
	}
	return 0
}

func (x *Type) GetStringLengthArg() uint64 {
	if x != nil && x.StringLengthArg != nil {
		return *x.StringLengthArg
	}
	return 0
}

func (x *Type) GetFuncbaseptr() bool {
	if x != nil {
		return x.Funcbaseptr
	}
	return false
}

type EnumRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *EnumRule) Reset() {
	*x = EnumRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumRule) ProtoMessage() {}

func (x *EnumRule) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumRule.ProtoReflect.Descriptor instead.
func (*EnumRule) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{5}
}

func (x *EnumRule) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type EnumValueRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *EnumValueRule) Reset() {
	*x = EnumValueRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumValueRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValueRule) ProtoMessage() {}

func (x *EnumValueRule) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValueRule.ProtoReflect.Descriptor instead.
func (*EnumValueRule) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{6}
}

func (x *EnumValueRule) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type OneofRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OneofRule) Reset() {
	*x = OneofRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneofRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneofRule) ProtoMessage() {}

func (x *OneofRule) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneofRule.ProtoReflect.Descriptor instead.
func (*OneofRule) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{7}
}

type ServiceRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceRule) Reset() {
	*x = ServiceRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRule) ProtoMessage() {}

func (x *ServiceRule) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRule.ProtoReflect.Descriptor instead.
func (*ServiceRule) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{8}
}

type MethodRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MethodRule) Reset() {
	*x = MethodRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodRule) ProtoMessage() {}

func (x *MethodRule) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodRule.ProtoReflect.Descriptor instead.
func (*MethodRule) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{9}
}

type MessageRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias       string       `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Funcptr     *FunctionDef `protobuf:"bytes,2,opt,name=funcptr,proto3" json:"funcptr,omitempty"`
	Anonymous   bool         `protobuf:"varint,3,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
	Parent      string       `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	Constructor *bool        `protobuf:"varint,5,opt,name=constructor,proto3,oneof" json:"constructor,omitempty"`
}

func (x *MessageRule) Reset() {
	*x = MessageRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRule) ProtoMessage() {}

func (x *MessageRule) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRule.ProtoReflect.Descriptor instead.
func (*MessageRule) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{10}
}

func (x *MessageRule) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *MessageRule) GetFuncptr() *FunctionDef {
	if x != nil {
		return x.Funcptr
	}
	return nil
}

func (x *MessageRule) GetAnonymous() bool {
	if x != nil {
		return x.Anonymous
	}
	return false
}

func (x *MessageRule) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *MessageRule) GetConstructor() bool {
	if x != nil && x.Constructor != nil {
		return *x.Constructor
	}
	return false
}

type FieldRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Type  *Type  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *FieldRule) Reset() {
	*x = FieldRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldRule) ProtoMessage() {}

func (x *FieldRule) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldRule.ProtoReflect.Descriptor instead.
func (*FieldRule) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{11}
}

func (x *FieldRule) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *FieldRule) GetType() *Type {
	if x != nil {
		return x.Type
	}
	return nil
}

type Any struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Any) Reset() {
	*x = Any{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Any) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Any) ProtoMessage() {}

func (x *Any) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Any.ProtoReflect.Descriptor instead.
func (*Any) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{12}
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nori_nori_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_nori_nori_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_nori_nori_proto_rawDescGZIP(), []int{13}
}

var file_nori_nori_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*FileRule)(nil),
		Field:         5000,
		Name:          "nori.file",
		Tag:           "bytes,5000,opt,name=file",
		Filename:      "nori/nori.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*ServiceRule)(nil),
		Field:         5000,
		Name:          "nori.service",
		Tag:           "bytes,5000,opt,name=service",
		Filename:      "nori/nori.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*MethodRule)(nil),
		Field:         5000,
		Name:          "nori.method",
		Tag:           "bytes,5000,opt,name=method",
		Filename:      "nori/nori.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageRule)(nil),
		Field:         5000,
		Name:          "nori.message",
		Tag:           "bytes,5000,opt,name=message",
		Filename:      "nori/nori.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldRule)(nil),
		Field:         5000,
		Name:          "nori.field",
		Tag:           "bytes,5000,opt,name=field",
		Filename:      "nori/nori.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*EnumRule)(nil),
		Field:         5000,
		Name:          "nori.enum",
		Tag:           "bytes,5000,opt,name=enum",
		Filename:      "nori/nori.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*EnumValueRule)(nil),
		Field:         5000,
		Name:          "nori.enum_value",
		Tag:           "bytes,5000,opt,name=enum_value",
		Filename:      "nori/nori.proto",
	},
	{
		ExtendedType:  (*descriptorpb.OneofOptions)(nil),
		ExtensionType: (*OneofRule)(nil),
		Field:         5000,
		Name:          "nori.oneof",
		Tag:           "bytes,5000,opt,name=oneof",
		Filename:      "nori/nori.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional nori.FileRule file = 5000;
	E_File = &file_nori_nori_proto_extTypes[0]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional nori.ServiceRule service = 5000;
	E_Service = &file_nori_nori_proto_extTypes[1]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional nori.MethodRule method = 5000;
	E_Method = &file_nori_nori_proto_extTypes[2]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional nori.MessageRule message = 5000;
	E_Message = &file_nori_nori_proto_extTypes[3]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional nori.FieldRule field = 5000;
	E_Field = &file_nori_nori_proto_extTypes[4]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional nori.EnumRule enum = 5000;
	E_Enum = &file_nori_nori_proto_extTypes[5]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional nori.EnumValueRule enum_value = 5000;
	E_EnumValue = &file_nori_nori_proto_extTypes[6]
)

// Extension fields to descriptorpb.OneofOptions.
var (
	// optional nori.OneofRule oneof = 5000;
	E_Oneof = &file_nori_nori_proto_extTypes[7]
)

var File_nori_nori_proto protoreflect.FileDescriptor

var file_nori_nori_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6e, 0x6f, 0x72, 0x69, 0x2f, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x6e, 0x6f, 0x72, 0x69, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x70, 0x0a, 0x06, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x04, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x6f,
	0x72, 0x69, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x52, 0x04,
	0x66, 0x75, 0x6e, 0x63, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x44, 0x65, 0x66, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x7b, 0x0a,
	0x0b, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x09, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x63, 0x76,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x63, 0x76, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x22, 0xea, 0x02, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x72,
	0x72, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x09, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x61, 0x72, 0x72, 0x61, 0x79, 0x4e,
	0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x6e,
	0x75, 0x6d, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x0b,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x41, 0x72, 0x67, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x11, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f,
	0x61, 0x72, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x0f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x41, 0x72, 0x67, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x62, 0x61, 0x73, 0x65, 0x70, 0x74, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x62, 0x61, 0x73, 0x65, 0x70, 0x74,
	0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x72,
	0x67, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x5f, 0x61, 0x72, 0x67, 0x22, 0x20, 0x0a, 0x08, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x45, 0x6e, 0x75,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x22, 0x0b, 0x0a, 0x09, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x0d, 0x0a,
	0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x0c, 0x0a, 0x0a,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x0b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x2b, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x70, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x66, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x70, 0x74, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x41, 0x0a, 0x09, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1e, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6e, 0x6f,
	0x72, 0x69, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x05, 0x0a,
	0x03, 0x41, 0x6e, 0x79, 0x22, 0x06, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0xcc, 0x01, 0x0a,
	0x08, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x55,
	0x49, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x4f, 0x49, 0x44, 0x50, 0x54, 0x52,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x48, 0x41, 0x52, 0x50, 0x54, 0x52, 0x10, 0x05, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x42,
	0x4f, 0x4f, 0x4c, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10,
	0x08, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04,
	0x45, 0x4e, 0x55, 0x4d, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x55, 0x4e, 0x43, 0x50, 0x54,
	0x52, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x0c, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49,
	0x4e, 0x54, 0x33, 0x32, 0x10, 0x0e, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10,
	0x0f, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x48, 0x41, 0x52, 0x10, 0x10, 0x3a, 0x41, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x88, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x4d,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x88, 0x27, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x49, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x88, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x4d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x88, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x6f,
	0x72, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x45, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x88, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3a, 0x41,
	0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x88, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x6f,
	0x72, 0x69, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x65, 0x6e, 0x75,
	0x6d, 0x3a, 0x56, 0x0a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x88, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x72, 0x69,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09,
	0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x45, 0x0a, 0x05, 0x6f, 0x6e, 0x65,
	0x6f, 0x66, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x88, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x6f, 0x72, 0x69, 0x2e,
	0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x6f, 0x63, 0x63, 0x79, 0x2f, 0x6e, 0x6f, 0x72, 0x69, 0x2f, 0x6e, 0x6f, 0x72, 0x69, 0x3b, 0x6e,
	0x6f, 0x72, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nori_nori_proto_rawDescOnce sync.Once
	file_nori_nori_proto_rawDescData = file_nori_nori_proto_rawDesc
)

func file_nori_nori_proto_rawDescGZIP() []byte {
	file_nori_nori_proto_rawDescOnce.Do(func() {
		file_nori_nori_proto_rawDescData = protoimpl.X.CompressGZIP(file_nori_nori_proto_rawDescData)
	})
	return file_nori_nori_proto_rawDescData
}

var file_nori_nori_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nori_nori_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_nori_nori_proto_goTypes = []interface{}{
	(TypeKind)(0),                         // 0: nori.TypeKind
	(*FileRule)(nil),                      // 1: nori.FileRule
	(*Export)(nil),                        // 2: nori.Export
	(*FunctionDef)(nil),                   // 3: nori.FunctionDef
	(*MethodDef)(nil),                     // 4: nori.MethodDef
	(*Type)(nil),                          // 5: nori.Type
	(*EnumRule)(nil),                      // 6: nori.EnumRule
	(*EnumValueRule)(nil),                 // 7: nori.EnumValueRule
	(*OneofRule)(nil),                     // 8: nori.OneofRule
	(*ServiceRule)(nil),                   // 9: nori.ServiceRule
	(*MethodRule)(nil),                    // 10: nori.MethodRule
	(*MessageRule)(nil),                   // 11: nori.MessageRule
	(*FieldRule)(nil),                     // 12: nori.FieldRule
	(*Any)(nil),                           // 13: nori.Any
	(*List)(nil),                          // 14: nori.List
	(*descriptorpb.FileOptions)(nil),      // 15: google.protobuf.FileOptions
	(*descriptorpb.ServiceOptions)(nil),   // 16: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),    // 17: google.protobuf.MethodOptions
	(*descriptorpb.MessageOptions)(nil),   // 18: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),     // 19: google.protobuf.FieldOptions
	(*descriptorpb.EnumOptions)(nil),      // 20: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 21: google.protobuf.EnumValueOptions
	(*descriptorpb.OneofOptions)(nil),     // 22: google.protobuf.OneofOptions
}
var file_nori_nori_proto_depIdxs = []int32{
	2,  // 0: nori.FileRule.export:type_name -> nori.Export
	3,  // 1: nori.Export.func:type_name -> nori.FunctionDef
	4,  // 2: nori.Export.method:type_name -> nori.MethodDef
	5,  // 3: nori.FunctionDef.args:type_name -> nori.Type
	5,  // 4: nori.FunctionDef.return:type_name -> nori.Type
	5,  // 5: nori.MethodDef.args:type_name -> nori.Type
	5,  // 6: nori.MethodDef.return:type_name -> nori.Type
	0,  // 7: nori.Type.kind:type_name -> nori.TypeKind
	3,  // 8: nori.MessageRule.funcptr:type_name -> nori.FunctionDef
	5,  // 9: nori.FieldRule.type:type_name -> nori.Type
	15, // 10: nori.file:extendee -> google.protobuf.FileOptions
	16, // 11: nori.service:extendee -> google.protobuf.ServiceOptions
	17, // 12: nori.method:extendee -> google.protobuf.MethodOptions
	18, // 13: nori.message:extendee -> google.protobuf.MessageOptions
	19, // 14: nori.field:extendee -> google.protobuf.FieldOptions
	20, // 15: nori.enum:extendee -> google.protobuf.EnumOptions
	21, // 16: nori.enum_value:extendee -> google.protobuf.EnumValueOptions
	22, // 17: nori.oneof:extendee -> google.protobuf.OneofOptions
	1,  // 18: nori.file:type_name -> nori.FileRule
	9,  // 19: nori.service:type_name -> nori.ServiceRule
	10, // 20: nori.method:type_name -> nori.MethodRule
	11, // 21: nori.message:type_name -> nori.MessageRule
	12, // 22: nori.field:type_name -> nori.FieldRule
	6,  // 23: nori.enum:type_name -> nori.EnumRule
	7,  // 24: nori.enum_value:type_name -> nori.EnumValueRule
	8,  // 25: nori.oneof:type_name -> nori.OneofRule
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	18, // [18:26] is the sub-list for extension type_name
	10, // [10:18] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_nori_nori_proto_init() }
func file_nori_nori_proto_init() {
	if File_nori_nori_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nori_nori_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Export); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumValueRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneofRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Any); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nori_nori_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nori_nori_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_nori_nori_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nori_nori_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 8,
			NumServices:   0,
		},
		GoTypes:           file_nori_nori_proto_goTypes,
		DependencyIndexes: file_nori_nori_proto_depIdxs,
		EnumInfos:         file_nori_nori_proto_enumTypes,
		MessageInfos:      file_nori_nori_proto_msgTypes,
		ExtensionInfos:    file_nori_nori_proto_extTypes,
	}.Build()
	File_nori_nori_proto = out.File
	file_nori_nori_proto_rawDesc = nil
	file_nori_nori_proto_goTypes = nil
	file_nori_nori_proto_depIdxs = nil
}
